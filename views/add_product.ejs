<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Add Product</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- Thêm Froala CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/froala-editor/3.2.6/css/froala_editor.pkgd.min.css">

<!-- Thêm Froala JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/froala-editor/3.2.6/js/froala_editor.pkgd.min.js"></script>

  <link rel="shortcut icon" href="#" />
  
  <style>
    .sticky-header {
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product-card {
      position: relative;
      overflow: hidden;
      transition: transform 0.3s ease;
      display: flex;
      flex-direction: column;
      height: 450px;
    }
    .dark-mode .product-card {
      position: relative;
      overflow: hidden;
      transition: transform 0.3s ease;
      display: flex;
      flex-direction: column;
      height: 450px;
      color: white;
    }

    .product-card img {
      height: 200px;
      object-fit: cover;
      width: 100%;
    }

    .product-card:hover {
      transform: translateY(-5px) scale(1.01);
      box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
    }

    .btn-primary, .btn-danger, .btn-success {
      height: 60px;
      width: 100%;
      transition: transform 0.3s ease;
    }

    .btn:hover {
      transform: translateY(-3px);
    }

    .avatar {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      object-fit: cover;
    }

    .custom {
      display: flex;
    }

    .preview {
      width: 400px;
    }

    #preview-name, #preview-description {
      word-wrap: break-word;
      word-break: break-all;
      white-space: normal;
    }

    .card-body.info {
      width: 100%;
      max-width: 1000px; /* Chiều rộng tối đa để không bị tràn */
      overflow-wrap: break-word;
    }
    .dark-mode .card-body.info {
      width: 100%;
      max-width: 1000px; /* Chiều rộng tối đa để không bị tràn */
      overflow-wrap: break-word;
      color: white;
      background-color: rgb(48, 48, 48);
    }
    

    body {
      background-color: #eeeeee54;
    }
    
    .history-group {
      width: 400px;
      height: 630px;
      color: #ffffff;
      margin-bottom: 80px;
      border: 2px solid #7b7b7b;
    }
    .form-control{
      width: 300px;
      height: 50px;
      color: #ffffff;
      margin-bottom: 80px;
      border: 2px solid #7b7b7b;
    }
    .nav-link {
        position: relative; /* Để sử dụng absolute positioning cho underline */
        display: inline-block;
        padding-bottom: 5px; /* Khoảng cách giữa text và underline */
    }

    .nav-link::after {
        content: ""; /* Nội dung rỗng để tạo thanh nhỏ */
        position: absolute;
        left: 16%;
        bottom: 0;
        width: 70%;
        height: 2px; /* Độ dày của thanh nhỏ */
        background-color: #0056ea; /* Màu của thanh nhỏ */
        transform: scaleX(0); /* Ẩn thanh nhỏ ban đầu */
        transform-origin: bottom right; /* Vị trí bắt đầu hiệu ứng */
        align-items: center;
        transition: transform 0.3s ease; /* Hiệu ứng chuyển tiếp cho thanh nhỏ */
    }

    .nav-link.home:hover::after,
    .nav-link.bxh:hover::after,
    .nav-link.giohang:hover::after,
    .nav-link.taosanpham:hover::after,
    .nav-link.login:hover::after,
    .nav-link.dangky:hover::after {
        transform: scaleX(1); /* Hiện thanh nhỏ khi hover */
        transform-origin: bottom left; /* Vị trí kết thúc hiệu ứng */
    }

    .home-icon {
        width: 30px; /* Thay đổi kích thước của hình ảnh nếu cần */
        height: 30px; /* Thay đổi kích thước của hình ảnh nếu cần */
    }
    .bxh-icon{
      width: 27px; /* Thay đổi kích thước của hình ảnh nếu cần */
      height: 27px;
    }
    .cart-icon{
      width: 23px;
      height: 23px;
    }

    .add-icon{
      width: 30px;
      height: 30px;
    }
    .card-body {
        flex: 1;
      }
    /* Chế độ sáng (mặc định) */
    body {
        background-color: #F5EFFF;
        color: #000;
        transition: background-color 0.3s ease, color 0.3s ease;
      }

      /* Chế độ tối */
      body.dark-mode {
        background-color: #1b1b1b;
        color: #f1f1f1;
      }

      .dark-mode .navbar, .dark-mode .card {
        background-color: #333333;
        color: #f1f1f1;
      }

      .dark-mode .btn-primary {
        background-color: #2897f8;
        border-color: #666;
      }


      .dark-mode a{
        color: #ffffff;
        transition: background-color 0.3s ease, color 0.3s ease;
      }

      .mode-button{
        height: 30px;
        width: 30px;
      }

      .dark-mode .header-design  {
        background-color: #666666fd; /* Màu nền tối cho header */
        color: white;
        transition: background-color 0.3s ease, color 0.3s ease;
      }
      .text-decoration-none{
        color: black;
      }
      .dark-mode .dropdown-menu{
        background-color: #0c0c0c;
        transition: background-color 0.3s ease, color 0.3s ease;
      }

      .dropdown-item{
        color: rgb(0, 0, 0);
        text-decoration: none;
        transition: background-color 0.3s ease, color 0.3s ease;
      }
      .dropdown-menu{
        color: white;
        transition: background-color 0.5s ease, color 0.5s ease;
      }
      #toggle-dark-mode {
        border: none; /* Loại bỏ khung viền */
        outline: none; /* Loại bỏ viền khi nhấn vào nút */
        background: none; /* Loại bỏ màu nền mặc định */
        cursor: pointer; /* Thay đổi con trỏ khi di chuột qua nút */
      }
      .header-design{
        position: sticky;
        background-color: #e2e2e2;
        top: 0px; 
        z-index: 1000;
      }
      .alpha{
        color: #000;
      }
      .dark-mode .alpha{
        color: white;
      }
      .table{
        background-color: white;
      }
      .dark-mode .table{
        background-color: rgb(49, 49, 49);
        color: white;
      }
      .form-group{
        color: #000;
        background-color: white;
      }
      .dark-mode .form-group{
        color: #ffffff;
        background-color: rgb(48, 48, 48);
      }
      .button-input{
        background-color: #d0f9bc;
      }
      .dark-mode .button-input{
        background-color: #676767;
      }

      #editor {
        height: auto; /* Thay đổi chiều cao */
        width: 70%; /* Thay đổi chiều rộng */
    }

  </style>
</head>
  <body>
    <header class="header-design" >
      <div class="container-fluid py-3" >
        <div class=" d-flex justify-content-between align-items-center" style="margin-right: 110px;">
          <h1 class="h4 mb-0">
            <a href="/" class="text-decoration-none" style="margin-left: 293px;" ><strong>E-Shop</strong></a>
          </h1>
          <nav class="nav">
            <ul class="nav">
              <li class="nav-item">
                <a class="nav-link home" href="/">
                    <img src="/img/home.png" alt="" class="home-icon"></img>
                </a>
            </li>
              <li class="nav-item">
                <a class="nav-link bxh" href="/scoreboard">
                  <img src="/img/bxh.jpg" alt="" class="bxh-icon">
                </a>
              </li>
              <% if (!user) { %>
              <li class="nav-item">
                <a class="nav-link login" href="/login">Đăng nhập</a>
              </li>
              <li class="nav-item">
                <a class="nav-link dangky" href="/register">Đăng ký</a>
              </li>
              <button id="toggle-dark-mode" style="margin-left: 150px;">
                <img src="img/mode.png" alt="" class="mode-button"></img>
              </button>
              <% } else { %>
              <li class="nav-item">
                <a class="nav-link giohang" href="/cart">
                    <img src="/img/cart.jpg" alt="" class="cart-icon">                  
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link taosanpham" href="/product/add">
                  <img src="/img/add.jpg" alt="" class="add-icon">
                </a>
              </li>
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle d-flex align-items-center" id="userDropdown" role="button">
                  <% if (user.avatar) { %>
                  <img src="<%= user.avatar %>" class="avatar me-2" alt="" />
                  <% } else { %>
                  <img src="./img/def.jpg" class="avatar me-2" alt="" />
                  <% } %>
                </a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                  <li>
                    <a class="dropdown-item" href="/user/<%= user.id %>">Profile</a>
                  </li>
                  <li><a class="dropdown-item" href="/settings">Cài đặt</a></li>
                  <li><a class="dropdown-item">Balanced: <%= user.balance %> VNĐ</a></li>
                  <li><hr class="dropdown-divider" /></li>
                  <li><a class="dropdown-item" href="/logout">Đăng xuất</a></li>
                </ul>
              </li>
              <button id="toggle-dark-mode" style="margin-left: 150px;">
                <img src="img/mode.png" alt="" class="mode-button"></img>
              </button>
              <% } %>
            </ul>
          </nav>
        </div>
      </div>
    </header>
    <div class="custom table" style="margin-top: 60px;">
      <div class="preview" style="margin-left: 10px;">
        <!-- Thêm vào phần preview -->
        <div class="cropper-container" style="display: none;">
          <h2>Crop Image</h2>
          <div id="cropper-area">
            <img id="cropper-image" src="" alt="Image for Cropping" />
          </div>
          <button id="crop-button" class="btn btn-primary">Crop and Save</button>
        </div>
        <h2 class="alpha">Product Preview</h2>
        <div class="card product-card" style="width: 650px; border: 2px solid #7b7b7b;">
          <img id="preview-image" class="card-img-top" src="" alt="Product Image">
          <div class="card-body info">
            <h3 id="preview-name" class="card-title alpha">Name</h3>
            <p id="preview-description" class="card-text alpha">Description</p>
            <p id="preview-price" class="card-text alpha">Price: 0 VND</p>
            <p id="preview-quantity" class="card-text alpha">Quantity: 0</p>
            <p id="preview-sale" class="card-text alpha" style="display:none;">Sale Value: 0%</p>
          </div>
        </div>
      </div>
      <div class="form-container" style="margin-left: 50px;">
        <h1 style="margin-left: 350px;">Add New Product</h1>
        <form id="product-form" action="/product/auth/add" method="POST" enctype="multipart/form-data">
          <div class="form-group" style="margin-left: 200px;">
            <input type="text" id="name" name="name" class="form-control button-input" style="border: 2px solid #7b7b7b; margin-left: 4px; margin-top: -10px;" required placeholder="Product name">
          </div>

          <div class="form-group">
            <div id="editor" style="margin-left: 190px;"></div>
            <input type="hidden" id="description" name="description" class="button-input" style="border: 2px solid #7b7b7b;">
          </div>

          <div class="form-group alpha">
            <label for="price">Price:</label>
            <input type="number" id="price" name="price" class="form-control button-input" step="100" style="border: 2px solid #7b7b7b;" required min="100" placeholder="Enter Price">
          </div>

          <div class="form-group alpha">
            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" name="quantity" class="form-control button-input" style="border: 2px solid #7b7b7b;" required min="1" placeholder="Enter quantity">
          </div>

          <div class="form-group alpha">
            <label for="image">Select image:</label>
            <input type="file" id="image" name="image" class="form-control-file" accept="image/*" required>
          </div>

          <div class="form-check alpha" style="margin-left: 20px; width: 100px; background-color: transparent;">
            <input type="checkbox" id="sale" name="sale" class="form-check-input">
            <label class="form-check-label" for="sale">Sale:</label>
          </div>

          <div class="form-group alpha" id="sale-value-container" style="display: none;">
            <label for="saleval">Sale Value (%):</label>
            <input type="number" id="saleval" name="saleval" class="form-control" min="1" max="99" step="1">
          </div>

          <button type="submit" class="btn btn-success " style="background-color: rgb(37, 255, 37);">Add Product</button>
        </form>
      </div>

      
      <div class="form-container " style="margin-left: 50px;">
        <h1>History</h1>
          <div class="history-group ">
              <name="history" class="form-control button-input" rows="4" required></textarea>
          </div>
      </div>

    </div>
    
    
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <script>
      const previewName = document.getElementById('preview-name');
      const previewDescription = document.getElementById('preview-description');
      const previewPrice = document.getElementById('preview-price');
      const previewQuantity = document.getElementById('preview-quantity');
      const previewSale = document.getElementById('preview-sale');
      const previewImage = document.getElementById('preview-image');
      const saleCheckbox = document.getElementById('sale');
      const saleValueContainer = document.getElementById('sale-value-container');
      const saleValueInput = document.getElementById('saleval');
      const form = document.getElementById('product-form');
    
      saleCheckbox.addEventListener('change', function () {
        if (this.checked) {
          saleValueContainer.style.display = 'block';
          saleValueInput.required = true;
          previewSale.style.display = 'block';
        } else {
          saleValueContainer.style.display = 'none';
          saleValueInput.required = false;
          previewSale.style.display = 'none';
        }
      });
    
      form.addEventListener('input', function () {
        previewName.textContent = document.getElementById('name').value || 'Name';
        previewDescription.innerHTML = document.getElementById('description').value || 'Description';
        previewPrice.textContent = 'Price: ' + (document.getElementById('price').value || 0) + ' VND';
        previewQuantity.textContent = 'Quantity: ' + (document.getElementById('quantity').value || 0);
        
        if (saleCheckbox.checked) {
          previewSale.textContent = 'Sale Value: ' + (saleValueInput.value || 0) + '%';
        }
      });
    
      form.addEventListener('change', function (e) {
        if (e.target.id === 'image') {
          const file = e.target.files[0];
          const reader = new FileReader();
          reader.onload = function (event) {
            previewImage.src = event.target.result;
          };
          reader.readAsDataURL(file);
        }
      });
    </script>
    <script>
      const toggleButton = document.getElementById('toggle-dark-mode');
      const body = document.body;
    
      // Kiểm tra nếu chế độ tối đã được kích hoạt trước đó
      if (localStorage.getItem('darkMode') === 'enabled') {
        body.classList.add('dark-mode');
      }
    
      toggleButton.addEventListener('click', () => {
        body.classList.toggle('dark-mode');
        if (body.classList.contains('dark-mode')) {
          localStorage.setItem('darkMode', 'enabled');

        } else {
          localStorage.setItem('darkMode', 'disabled');
        }
      });
    </script>
  
    <script>
      new FroalaEditor('#editor', {
      events: {
        'contentChanged': function () {
          // Lưu nội dung vào input ẩn trước khi gửi form
          const descriptionInput = document.getElementById('description');
          descriptionInput.value = this.html.get();
        }
      }
    });
    form.addEventListener('submit', function (e) {
    const confirmation = confirm("Bạn có chắc chắn muốn thêm sản phẩm này?");
    if (!confirmation) {
      e.preventDefault();
    }
  });
    form.addEventListener('submit', function (e) {
    const descriptionValue = document.getElementById('description').value;
    if (!descriptionValue.trim()) {
      alert("Mô tả không được để trống!");
      e.preventDefault();
    }
  });

    </script>

  </body>
</html>
